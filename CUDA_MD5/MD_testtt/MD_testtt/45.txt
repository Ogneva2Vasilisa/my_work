#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include "md5.h"
#include "md5.c"

int n = 10;
int i = 0;
char** stroka;
uint8_t** result;

void print_hash(uint8_t* p) {
    for (unsigned int i = 0; i < 16; ++i) {
        printf("%02x", p[i]);
    }
    printf("\n");
}

int init() {
    result = (uint8_t**)malloc(n);
    stroka = (char**)malloc(n);

    for (i = 0; i < n; i++)
    {
        stroka[i] = (char*)malloc(16);
        result[i] = (uint8_t*)malloc(16);
    }
    i = 0;
    {
        FILE* mf;
        // Переменная, в которую поочередно будут помещаться считываемые строки
        char str[25];

        //Указатель, в который будет помещен адрес массива, в который считана 
        // строка, или NULL если достигнут коней файла или произошла ошибка
        char* estr;

        // Открытие файла с режимом доступа «только чтение» и привязка к нему потока данных
        printf("Открытие файла : ");
        mf = fopen("slovar.txt", "r");//----------------------------------------------------!!!!!!!!!!!!!!!!!!
        // Проверка открытия файла
        if (mf == NULL) { printf("ошибка\n"); return -1; }
        else printf("выполнено\n");
        printf("Считаны строки : \n");
        //Чтение (построчно) данных из файла в бесконечном цикле
        while (i != n)
        {
            // Чтение одной строки  из файла
            estr = fgets(str, sizeof(str), mf);

            //Проверка на конец файла или ошибку чтения
            if (estr == NULL)
            {
                // Проверяем, что именно произошло: кончился файл или это ошибка чтения
                if (feof(mf) != 0)
                {
                    //Если файл закончился, выводим сообщение о завершении чтения и выходим из бесконечного цикла
                    printf("\nЧтение файла закончено\n");
                    break;
                }
                else
                {
                    //Если при чтении произошла ошибка, выводим сообщение об ошибке и выходим из бесконечного цикла
                    printf("\nОшибка чтения из файла\n");
                    break;
                }
            }
            //Если файл не закончился, и не было ошибки чтения выводим считанную строку  на экран
            
            strncpy(stroka[i], str, strlen(str));
            i++;
        }

        // Закрываем файл
        printf("Закрытие файла : ");
        if (fclose(mf) == EOF) printf("ошибка\n");
        else printf("выполнено\n");
        //return 0;

        //return 0;
    }
    for (i = 0; i < n; i++)
    {
        printf("%s ", stroka[i]);
    }
    printf("\n");
}

int main() {
    
    if(init()==-1)return -1;

    //-----------------выполнение------------------
    for (i = 0; i < n; i++)
    {
        md5String(stroka[i], result[i]);
    }
    for (i = 0; i < n; i++)
    {
        print_hash(result[i]);
    }
    return 0;
}